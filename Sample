
        [HttpPost("uploadFromUI")]
        public async Task<IActionResult> UploadFileFromUIAsync([FromForm(Name = "file")] IFormFile formFile, string description = "")
        {

            bool isFileUploaded = false;
            bool isVirusFound = false;
            var isRecordInsertedDynamoDB = false;
            int docId = 0;

            if (formFile.FileName == null)
                return BadRequest("Please upload valid file.");

            (isFileUploaded, isVirusFound) = await _s3ClientRepository.UploadFileAsync(formFile);

            if (isVirusFound)
            {
                return StatusCode(StatusCodes.Status502BadGateway, $"{formFile.FileName} affetced by virus");
            }

            if (isFileUploaded)
            {
                var documents = await _dynamoClientRepository.GetDocumentDetails(0, _appDetailsOptions.ApplicationId, _appDetailsOptions.ClientId,
                formFile.FileName, false);
                int documentId = 0;
                int existingDocId = Convert.ToInt32(documents?.FirstOrDefault()?.DocumentId);

                if (existingDocId > 0)
                {
                    documentId = existingDocId;
                }
                (isRecordInsertedDynamoDB, docId) = await _dynamoClientRepository.SaveRecordDyanmoDB(formFile.FileName, description,
                    documentId);
                if (!isRecordInsertedDynamoDB)
                {
                    await _s3ClientRepository.DeleteFileAsync(formFile.FileName);
                }
            }
            if (isFileUploaded && isRecordInsertedDynamoDB)
            {
                return Ok($"Document with documentId {docId} uploaded on S3Client bucket & meatadata inserted in DynamoDb successfully");
            }
            else
            {
                return StatusCode(StatusCodes.Status500InternalServerError,
                    $"Error occured whlile uploading {formFile.FileName} document on S3Client or inserting data into DynamoDB." +
                    $"Please check the logs");
            }
        }
